// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  userId    BigInt
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           BigInt    @id
  username     String    @unique
  passwordHash String
  displayName  String?
  createdAt    DateTime  @default(now())
  profileImage String?
  posts        Post[]
  Session      Session[]

  // Users that this user is following
  followedBy Follower[] @relation("UserFollows")
  // Users that are following this user
  following  Follower[] @relation("UserFollowed")
}

model Follower {
  id Int @id @default(autoincrement())

  followerId BigInt
  follower   User   @relation(name: "UserFollowed", fields: [followerId], references: [id])

  followingId BigInt
  following   User   @relation(name: "UserFollows", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Post {
  id        BigInt   @id @default(autoincrement())
  authorId  BigInt
  author    User     @relation(fields: [authorId], references: [id])
  content   String?
  createdAt DateTime @default(now())
}
