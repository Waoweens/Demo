// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  userId    BigInt
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  // basic user info
  id           BigInt    @id
  username     String    @unique
  passwordHash String
  sessions     Session[]
  createdAt    DateTime  @default(now())

  // user profile
  displayName  String?
  bio          String?
  profileImage String?

  // user content
  posts Post[]
  yeahs Yeah[]

  // user relationships
  followedBy Follower[] @relation("UserFollows")
  following  Follower[] @relation("UserFollowed")
}

model Follower {
  id BigInt @id

  followerId BigInt
  follower   User   @relation(name: "UserFollowed", fields: [followerId], references: [id])

  followingId BigInt
  following   User   @relation(name: "UserFollows", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Post {
  // post
  id        BigInt   @id @default(autoincrement())
  authorId  BigInt
  author    User     @relation(fields: [authorId], references: [id])
  content   String?
  createdAt DateTime @default(now())

  // post relationships
  yeahs   Yeah[]
  replies Post[] @relation("Replies")
  reposts Post[] @relation("Reposts")
  quotes  Post[] @relation("Quotes")

  // replies
  replyParent   Post?   @relation("Replies", fields: [replyParentId], references: [id])
  replyParentId BigInt?

  // reposts
  repostParent   Post?   @relation("Reposts", fields: [repostParentId], references: [id])
  repostParentId BigInt?

  // quote
  quoteParent   Post?   @relation("Quotes", fields: [quoteParentId], references: [id])
  quoteParentId BigInt?
}

model Yeah {
  id     BigInt @id @default(autoincrement())
  postId BigInt
  post   Post   @relation(fields: [postId], references: [id])

  userId BigInt
  user   User   @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}
